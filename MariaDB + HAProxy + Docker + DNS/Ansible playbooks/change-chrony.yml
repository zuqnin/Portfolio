---
- name: lineinfile module demo
  hosts: all
  vars_prompt:
      - name: timezone
        prompt: What is your time zone?
        private: no
  vars_files:
      - ansibe-inventory/node_vars.yml
  tasks:

      - name: install ntpsec package
        yum:
            name: "{{ item }}"
            state: latest
        with_items:
              - ntpsec
              - chrony

      - name: timezone
        timezone:
            name: "{{ timezone }}"

      - name: backup chrony.conf
        command: "cp /etc/chrony.conf{,.bkp}"

      - name: edit firewall rule for ntp
        firewalld:
                name: ntp
                permanent: yes
                immediate: yes
                state: enabled

      - name: allow ntp connect from another hosts
        lineinfile:
                    path: /etc/chrony.conf
                    regexp: "^allow "
                    insertafter: "^#allow"
                    line: "allow {{ dns_server_ip_prefix }}"
                    state: present
        when: ansible_host == "ns.server.local"

      - name: local stratum
        lineinfile:
                    path: /etc/chrony.conf
                    regexp: "^local"
                    insertafter: "^#local"
                    line: "local stratum 10"
                    state: present
        when: ansible_host == "ns.server.local"

      - name: add ntp server
        lineinfile:
                    path: /etc/chrony.conf
                    regexp: "^pool*"
                    line: "server {{ dns_ip }} iburst"
                    state: present
        when: ansible_host != "ns.server.local"

      - name: Clock update for ns.server.local
        cron:
              name: "Clock update dns server"
              minute: "15"
              hour: "*"
              job: "ntpdate -u pool.ntp.org"
        when: ansible_host == "ns.server.local"

      - name: Clock update for other hosts
        cron:
              name: "Clock update for other hosts"
              minute: "30"
              hour: "*"
              job: "ntpdate -u ns.server.local"
        when: ansible_host != "ns.server.local"

      - name: Restart chronyd
        service:
                name: "{{ item }}"
                state: restarted
        with_items:
              - chronyd
              - ntpd
      